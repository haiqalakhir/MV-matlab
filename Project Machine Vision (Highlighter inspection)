close all; clear all; clc; 

highlighter = imread('pencolor1.jpg');
I = rgb2hsv(highlighter);  % Convert RGB image to chosen color space hsv
%DARK BLUE
channel1Min = 0.581;   % Define thresholds for channel 1 based on histogram settings 
channel1Max = 0.758;

channel2Min = 0.378;   % Define thresholds for channel 2 based on histogram settings 
channel2Max = 1.000;

channel3Min = 0.000;   % Define thresholds for channel 3 based on histogram settings 
channe13Max = 0.631;

sliderBW = (I(:,:,1) >= channel1Min) & (I(:,:,1) <= channel1Max) & ... % Create mask based on chosen histogram thresholds
  (I(:,:,2) >= channel2Min) & (I(:,:,2) <= channel2Max) &...
  (I(:,:,3) >= channel3Min) & (I(:,:,3) <= channel3Max);
BW = slider BW;

maskedRGBImage = highlighter;  % Initialize output masked image based on input image.

maskedRGBImage(repmat(~BW, [1 1 3])) = 0;  % Set background pixels where BW is false to zero.
figure, imshow(maskedRGBImage);

darkblue1=rgb2gray (maskedRGB Image);
darkblue2=imbinarize (darkbluel);
darkblue3 = bwareaopen(darkblue2, 10000);

[label, numdarkblue] = bwlabel(darkblue3);
fprintf('number of dark blue pen %1.0f\n', numdarkblue)
%GREEN
channel1Min 0.343;   % Define thresholds for channel 1 based on histogram settings 
channel1Max = 0.422;

channel2Min = 0.000; % Define thresholds for channel 2 based on histogram settings 
channel2Max 1.000,

channe13Min = 0.000; % Define thresholds for channel 3 based on histogram settings 
channe13Max 1.000;

sliderBW = ((:,:,1)>= channel1Min) & (I(:,:,1) <= channel1Max) & ... % Create mask based on chosen histogram thresholds 
   (1(:,:,2) = channel2Min) & ((:,:,2) <= channel2Max) &... 
   (I(:,:,3) > channel3Min) & ((:,:,3) channel3Max); 
BW = sliderBW;

maskedRGBImage = highlighter; % Initialize output masked image based on input image.

maskedRGBImage(repmat(~BW, [1 1 3])) = 0; % Set background pixels where Bw is false to zero. 
figure, imshow(maskedRGBImage);

green1=rgb2gray(masked RGBImage); 
green2 imbinarize(green1); 
green3 = bwareaopen(green2, 10000);

[label, numgreen] bwlabel(green3);
fprintf('number of green pen %1.0f\n', numgreen)
%LIGHTBLUE
channel1Min = 0.534; % Define thresholds for channel 1 based on histogram settings 
channel1Hax 0.584;

channel2Min = 0.000; % Define thresholds for channel 2 based on histogram settings 
channel2Max 1.000;

channel3Min 0.000; % Define thresholds for channel 3 based on histogram settings 
channe13Hax 1.000;

slider BW = (I(:,:,1) = channel1Min) & (I(:,:,1) <= channel1Max) &... % Create mask based on chosen histogram thresholds
   (I(:,:,2) >= channel2Min) & (I(:,:,2) <= channel2Max) &... 
   (I(:,:,3) >= channel3Min) & (I(:,:,3) <= channel3Max);
BW sliderBW;

maskedRGBImage = highlighter; % Initialize output masked image based on input image.

maskedRGBImage(repmat(~BW, [1 1 3])) = 0;   % Set background pixels where BW is false to zero.
figure, imshow(masked RGB Image);

lightbluel=rgb2gray (masked RGB Image);
lightblue2=imbinarize(lightblue1);
lightblue3 = bwareaopen (lightblue2, 10000);

[label, numlightblue] = bwlabel(lightblue3); 
fprintf("number of light blue pen %1.0f\n', numlightblue)
% ORANGE
channel1Min = 0.946; % Define thresholds for channel 1 based on histogram settings 
channel1Max = 0.030;

channel2Min = 0.000; % Define thresholds for channel 2 based on histogram settings 
channel2Max 1.000;

channel3Min = 0.000; % Define thresholds for channel 3 based on histogram settings 
channel3Max 1.000;

sliderBW = (((:,:,1)>= channel1Min) | (I(:,:,1) <= channel1Max)) &... Create mask based on chosen histogram thresholds 
  (I(:,:,2) = channel2Min) & ((:,:,2) <= channel2Max) &... 
  (I(:,:,3) > channel 3Min) & ((:,:,3) <= channel3Max);
BW = sliderBW;

maskedRGBImage = highlighter; % Initialize output masked image based on input image.

maskedRGBImage(repmat(~BW, [1 1 3])) = 0;  % Set background pixels where BW is false to zero.
figure,imshow(maskedRGBImage);

orangel=rgb2gray (maskedRGBImage); 
orange2=imbinarize(orangel); 
orange3 = bwareaopen(orange2, 20000);

[label, numorange] bwlabel (orange3); 
fprintf('number of orange pen %1.0f\n', numorange)

% PINK
channel1Min = 0.831; % Define thresholds for channel 1 based on histogram settings 
channel1Max = 0.891;

channel2Min 0.000; % Define thresholds for channel 2 based on histogram settings 
channel2Max 1.000;

channe13Min = 0.000; % Define thresholds for channel 3 based on histogram settings 
channe13Max = 1.000;

sliderBW (I(:,:,1)> channel1Min) & ((:,:,1) <= channel1Max) &... % Create mask based on chosen histogram thresholds 
  (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
  (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channe13Max);
BW = sliderBW;

maskedRGB Image = highlighter; % Initialize output masked image based on input image.

maskedRGBImage(repmat(~BW, [1 1 3])) = 0; % Set background pixels where BW is false to zero.
figure, imshow(maskedRGB Image);

pink1=rgb2gray(maskedRGBImage);
pink2-imbinarize(pink1);
pink3 bwareaopen(pink2, 10000);

[label, numpink] = bwlabel(pink3);
fprintf('number of pink pen = %1.0f\n', numpink)


% YELLOW 
channel1Min = 0.148; % Define thresholds for channel 1 based on histogram settings 
channel1Max = 0.213;

channel2Min = 0.000; % Define thresholds for channel 2 based on histogram settings 
channel2Max = 1.000;

channe13Min 0.000; % Define thresholds for channel 3 based on histogram settings 
channel3Max = 1.000;


sliderBW (I(:,:,1)> channel1Min) & ((:,:,1) <= channel1Max) & ...  % Create mask based on chosen histogram thresholds 
  (I(:,:,2) >= channel2Min) & (I(:,:,2) <= channel2Max) & ... 
  (I(:,:,3) >= channel3Min) & (I(:,:,3) <= channe13Max);
sliderBW; BW=

maskedRGBImage = highlighter;  %Initialize output masked image based on input image.

maskedRGBImage(repmat(~BW, [1 1 3])) = 0;   % Set background pixels where BW is false to zero.
figure, imshow(masked RGB Image);

yellowl=rgb2gray(maskedRGBImage);
yellow2=imbinarize(yellow);
yellow = bwareaopen(yellow2, 10000);


[label, numyellow] = bwlabel(yellow3);
fprintf("number of yellow pen 1.0f\n\n', numyellow)

if numdarkblue==1 & numgreen==1 & numlightblue==1 & numorange==1 & numpink==1 & numyellow==1
  fprintf("pass\n');

else 
  fprintf('reject');
